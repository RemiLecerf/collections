operation,base_url,endpoint,summary,description,operationId
get,cds,/qos/requests,,,getRequestQueueInformation
get,cds,/qos/rules/{which},,,getRuleRequestInformation
get,cds,/resources/{key}/availability,Get availability information about a Resource,"This checks whether or not a resource is available. A resource may be disabled if, for example, it is not working correctly or is not ready for public release.",getDatasetAvailability
get,cds,/resources/{type}/{key}/availability,Get availability information about a Resource of a given type.,"This operation searches for a dataset or tool using a key (slug, name or UUID). This is exactly likeGET .../{key}/availability, except that only Resources of the type given are searched.",getDatasetAvailabilityByType
get,cds,/resources/{key},Operation to get metadata describing a Resource,"This operation searches for a dataset or tool using a key (name, slug or UUID).",getDatasetsResouce
get,cds,/resources/{type}/{key},Operation to get metadata describing a Resource of a given type.,"This operation searches for a dataset or tool using a key (slug, name or UUID). This is exactly likeGET .../{key}, except that only Resources of the type given are searched.",getDatasetsResouceByType
get,cds,/resources,Retrieve a list of the IDs of all resources,"This returns a sorted list of identifiers for resources. The identifiers will be the short name of the resource where one exists, and the UUID for the ISO 19115 record otherwise. These identifiers are always suitable for fetching the full resource information or submitting requests.		No more than 10,000 results will be returned. Use of 'limit' and 'after' is recommended. Set limit=n and leave 'after' unset in the first request. If n or more results are returned, make further requests with limit=n and after set to the last result from the previous request.",getResouceList
get,cds,/resources/{type},Retrieve a list of the IDs of all resources of aparticular type,"This is exactly like GET on resources/, except that the are limited to resources of only one particular type specified in the path.",getResourceListByType
post,cds,/resources/{resourceName},Submit a new request for data from a particular resource,"This submits a request for data and returns the status of the new task. If you get a failure such as a network error where it's not possible to determine whether the task was submitted or not, then use a task list endpoint to check. You can also use the alternative PUT tasks/resources/resourceName/clientid-my-unique-id endpoint to be able to retry without this problem.		The status of the new request is returned.",postResource
post,cds,/resources/{resourceType}/{resourceName},Submit a new request for data from a particular resourcefrom a given type,"This submits a request for data and returns the status of the new task. If you get a failure such as a network error where it's not possible to determine whether the task was submitted or not, take care not to create a duplicate (eg, by using a task list endpoint to check). You can also use the alternative PUT tasks/resources/resourceName/clientid-my-unique-id endpoint to be able to retry without this problem.		The status of the new request is returned.",postResourceByType
get,cds,/tasks/{taskidpath},Retrieve a task's details or a list of tasks' details,"Return information about a matching task or tasks.			In the most common cases, the path is simply 'tasks/' to return a list of all of your tasks, or 'tasks/my-task-id' to return information about a single task.		A task ID may be either its UUID, which is returned when it is created, or 'clientid-&lt;caller-specified ID&gt;' if you specified a client ID when you originally submitted the request		In general, the path is 'task-space/taskid-path', and may have '/subtasks' appended.		Here, task-space is one of the following:		* 'resources' - matches all requests created with public APIs	* 'resources/apps', 'resources/tools' or 'resources/datasets',which match requests for particular types of resource.	* 'resources/resource-name', 'resources/apps/resource-name', ...,which match tasks only for a specified resource.		and a taskid-path is a sequence of task IDs which specify parent-child relationships between tasks. (eg, id1/id2 matches a task with ID id2 which is a sub-task of id1).However, you can also fetch information on task id2 with simply 'id2' - the full path is not required.		If taskid-path is empty then a list of (zero or more) tasks is returned, otherwise information about a single task is returned (or an error if it doesn't exist). '/subtasks' may be appended to any non-empty taskid-path to return a list of all subtasks.		## Examples:		* /tasks - returns a list of all your tasks	* /tasks/12183e75-3441-412c-88c1-8e127231b27c - returns information about a single task	* /tasks/12183e75-3441-412c-88c1-8e127231b27c/subtasks - returns a list of subtasks for a task	* /tasks/resources/datasets/ - returns a list of tasks for datasets (ie, requests for data rather than processing)	* /tasks/resources/datasets/alien-abduction-density/ - returns a list of requests for particular data	",defaultGetEndpoint
delete,cds,/tasks/{taskidpath},Deletes the selected task,"Deletes matching task or tasks (and any subtasks).			## Examples:		* /tasks - deleted all your tasks	* /tasks/12183e75-3441-412c-88c1-8e127231b27c - deletes a single task	* /tasks/12183e75-3441-412c-88c1-8e127231b27c/subtasks - deletes the list of subtasks for a task	* /tasks/resources/datasets/ - deleted the list of tasks for datasets (ie, requests for data rather than processing)	* /tasks/resources/datasets/alien-abduction-density/ - deletes the list of requests for particular data	",defaultDeleteEndpoint
get,cds,/tasks/{taskid}/provenance,Gets the provenance starting with a request_id,Gets the provenance starting with a request_id.			## Examples:		/tasks/12183e75-3441-412c-88c1-8e127231b27c/provenance	Will show the provenance of the cache results for the request,getProvenance
post,cds,/tasks/delete,Delete multiple tasks,This deletes tasks based on a list of IDs in the request body. Subtasks of the listed tasks are also deleted.,multipleDelete
put,cds,/tasks/resources/{resourceName}/clientid-{clientid},Submit a new request for data from a particular resource,"This submits a request for data and returns the status of the new task. 'clientid' should be a unique identifier chosen by the caller, such as a UUID. If you get a failure such as a network error where it's not possible to determine whether the task was submitted or not, then you should submit the task again using the same client ID. If the original request was processed then no duplicate is created - the status of the existing request is returned.",resourcesPutEndpoint
put,cds,/tasks/resources/{resourceType}/{resourceName}/clientid-{clientid},Submit a new request for data from a particular resource,"This is just like the resources/{resourceName}/clientid-{clientid} endpoint, except that submission only succeeds if the resource is of the expected type.",resourcesTypedPutEndpoint
get,cds,/terms/list,,,getLastTermsAndCondsByIds
get,cds,/terms/{tcId}/{tcRevision},,,getTermsAndCondsByIdAndRevision
get,cds,/users/me/terms-and-conditions,Retrieve a list of the Terms & Conditions accepted by the user,This method returns the list of all Terms & Conditions that the user has accepted,getTermsUser
post,cds,/users/me/terms-and-conditions,Accept a list of the Terms & Conditions,This accepts the Terms & Conditions listed on the post data json,createNewTerms
